# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@4.0.1

master_only: &master_only
  filters:
    branches:
      only:
        - master

defaults:
  base: &base
    docker:
      - image: circleci/node:11-browsers
    working_directory: ~/repo

  build-and-push-image: &build-and-push-image
    <<: *base
    # <<: *master_only
    context: aws-ecr
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - aws-ecr/build-and-push-image:
          repo: prodigy-test/${APP}
          tag: ${IMAGE_TAG}
          dockerfile: ./packages/${APP}/${APP}.Dockerfile
  
jobs:
  setup:
    <<: *base
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/repo/node_modules

  lint:
    <<: *base
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn lint

  unit-test:
    <<: *base
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn test
      
  app-x-e2e-test:
    <<: *base
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: 
          name: Start App X
          environment:
            PORT: 3000
          command: yarn app-x start
          background: true
      - run: 
          name: Run App X end to end tests
          environment:
            URL: http://localhost:3000/
          command: |
            while ! nc -z localhost 3000; do sleep 1; done
            yarn app-x test:e2e

  app-y-e2e-test:
    <<: *base
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: 
          name: Start App Y
          environment:
            PORT: 3001
          command: yarn app-y start
          background: true
      - run: 
          name: Run App Y end to end tests
          environment:
            URL: http://localhost:3001/
          command: |
            while ! nc -z localhost 3001; do sleep 1; done
            yarn app-y test:e2e

  app-x-build-and-push-image-staging:
    <<: *build-and-push-image
    environment:
      APP: app-x
      IMAGE_TAG: staging

  app-y-build-and-push-image-staging:
    <<: *build-and-push-image
    environment:
      APP: app-y
      IMAGE_TAG: staging


workflows:
  version: 2.1
  integration:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - unit-test:
          requires:
            - setup
      - app-x-e2e-test:
          requires:
            - setup
      - app-y-e2e-test:
          requires:
            - setup
      - app-x-build-and-push-image-staging:
          requires:
            - unit-test
            - lint
            - app-x-e2e-test
      - app-y-build-and-push-image-staging:
          requires:
            - unit-test
            - lint
            - app-y-e2e-test
